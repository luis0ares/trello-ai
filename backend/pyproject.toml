[tool.poetry]
name = "task-board"
version = "0.1.0"
description = "Trello clone with discord login and IA integration"
authors = ["Luis Soares <luisedu.soares@outlook.com>"]
license = "MIT"
package-mode = false

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = ">=3.11,<4.0"
fastapi = "^0.116.1"
pydantic = "^2.11.7"
pydantic-settings = "^2.10.1"
alembic = "^1.16.4"
sqlalchemy = "^2.0.42"
snowflake-id = "^1.0.2"
uvicorn = { extras = ["standard"], version = "^0.35.0" }
email-validator = "^2.2.0"
openai = {extras = ["aiohttp"], version = "^1.101.0"}
asyncpg = "^0.30.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.12.7"
autopep8 = "^2.3.2"
pytest = "^8.4.1"
pytest-env = "^1.1.5"
pytest-cov = "^6.2.1"
pytest-asyncio = "^1.1.0"
aiosqlite = "^0.21.0"
taskipy = "^1.14.1"
testcontainers = {extras = ["postgres"], version = "^4.12.0"}
faker = "^37.6.0"

[tool.pytest.ini_options]
asyncio_mode = "auto"
addopts = "--cov=app --cov-report=html --cov-report=xml"

[tool.pytest_env]
ENVIRONMENT = "TEST"
DATABASE_URL = "postgresql+asyncpg://user:password@localhost:5432/testdb"
OPENAI_API_KEY = "sk-test-1234567890abcdef"

[tool.ruff]
target-version = "py311"
line-length = 79
exclude = ["*_prompt.py"]

[tool.ruff.lint.pycodestyle]
# E501 reports lines that exceed the length of 120.
max-line-length = 120

[tool.ruff.lint.pydoclint]
# Skip docstrings which fit on a single line.
ignore-one-line-docstrings = true

[tool.ruff.lint]
preview = true
select = ['I', 'F', 'E', 'W', 'PT']

[tool.ruff.format]
preview = true
quote-style = "single"

# https://coverage.readthedocs.io/en/latest/excluding.html
[tool.coverage.report]
exclude_also = [
    'def __repr__',
    'if self.debug:',
    'if settings.DEBUG',
    'raise AssertionError',
    'raise NotImplementedError',
    'if 0:',
    'if __name__ == .__main__.:',
    'if TYPE_CHECKING:',
    'class .*\bProtocol\):',
    '@(abc\.)?abstractmethod',
    'log\.error\(',
    'log\.info\(',
    'log\.debug\(',
    'except Exception:\s*\n\s*pass',
    'except Exception:\s*\n\s*...',
]

[tool.taskipy.tasks]
run = "uvicorn app.main:app --port 8000 --reload --log-level debug"
pytest = 'pytest .'
ruff = "ruff check ./app --fix"
autorevision = "alembic revision --autogenerate -m 'autogenerated'"
auhead = "alembic upgrade head"
adbase = "alembic downgrade base"
